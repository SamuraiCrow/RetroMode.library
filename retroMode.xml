<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE library SYSTEM "library.dtd">
<library name="retromode" basename="RetroModeBase" openname="retromode.library">
	<include>exec/types.h</include>
	<include>libraries/retromode.h</include>
	<interface name="main" version="1.0" struct="RetroModeIFace" prefix="_retromode_" asmprefix="IRetroMode" global="IRetroMode">
		<method name="Obtain" result="ULONG"/>
		<method name="Release" result="ULONG"/>
		<method name="Expunge" result="void" status="unimplemented"/>
		<method name="Clone" result="struct Interface *" status="unimplemented"/>
		<method name="alloc_retoVideo" result="struct retroVideo *">
			<arg name="window" type="struct Window *"/>
		</method>
		<method name="free_retroVideo" result="void">
			<arg name="video" type="struct retroVideo *"/>
		</method>
		<method name="clear_retroVideo" result="void">
			<arg name="video" type="struct retroVideo *"/>
		</method>
		<method name="draw_retroVideo" result="void">
			<arg name="video" type="struct retroVideo *"/>
		</method>
		<method name="dma_retroVideo" result="void">
			<arg name="video" type="struct retroVideo *"/>
		</method>
		<method name="set_retroVideoColor" result="void">
			<arg name="video" type="struct retroVideo *"/>
			<arg name="RGB" type="struct retroRGB *"/>
			<arg name="color" type="int"/>
			<arg name="from" type="int"/>
			<arg name="to" type="int"/>
		</method>
		<method name="applyCopper" result="void">
			<arg name="video" type="struct retroVideo *"/>
		</method>
		<method name="retroOpenScreen" result="struct retroScreen *">
			<arg name="width" type="int"/>
			<arg name="height" type="int"/>
		</method>
		<method name="retroCloseScreen" result="void">
			<arg name="screen" type="struct retroScreen *"/>
		</method>
		<method name="retroApplyScreen" result="void">
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="video" type="struct retroVideo *"/>
			<arg name="offsetx" type="int"/>
			<arg name="oppsety" type="int"/>
			<arg name="videomode" type="int"/>				
		</method>
		<method name="retroPixel" result="void">
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="x" type="int"/>
			<arg name="y" type="int"/>
			<arg name="color" type="unsigned char"/>
		</method>
		<method name="retroPoint" result="unsigned char">
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="x" type="int"/>
			<arg name="y" type="int"/>
		</method>		
		<method name="retroBAR" result="void">
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="x0" type="int"/>
			<arg name="y0" type="int"/>
			<arg name="x1" type="int"/>
			<arg name="y1" type="int"/>
			<arg name="color" type="unsigned char"/>
		</method>
		<method name="retroOrBAR" result="void">
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="x0" type="int"/>
			<arg name="y0" type="int"/>
			<arg name="x1" type="int"/>
			<arg name="y1" type="int"/>
			<arg name="or_mask" type="unsigned char"/>
		</method>
		<method name="retroXorBAR" result="void">
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="x0" type="int"/>
			<arg name="y0" type="int"/>
			<arg name="x1" type="int"/>
			<arg name="y1" type="int"/>
			<arg name="xor_mask" type="unsigned char"/>
		</method>
		<method name="retroBox" result="void">
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="x0" type="int"/>
			<arg name="y0" type="int"/>
			<arg name="x1" type="int"/>
			<arg name="y1" type="int"/>
			<arg name="color" type="unsigned char"/>
		</method>
		<method name="retroOrBox" result="void">
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="x0" type="int"/>
			<arg name="y0" type="int"/>
			<arg name="x1" type="int"/>
			<arg name="y1" type="int"/>
			<arg name="or_mask" type="unsigned char"/>
		</method>
		<method name="retroXorBox" result="void">
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="x0" type="int"/>
			<arg name="y0" type="int"/>
			<arg name="x1" type="int"/>
			<arg name="y1" type="int"/>
			<arg name="xor_mask" type="unsigned char"/>
		</method>
		<method name="retroCircle" result="void">
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="x" type="int"/>
			<arg name="y" type="int"/>
			<arg name="r" type="int"/>
			<arg name="color" type="unsigned char"/>
		</method>
		<method name="retroOrCircle" result="void">
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="x" type="int"/>
			<arg name="y" type="int"/>
			<arg name="r" type="int"/>
			<arg name="or_mask" type="unsigned char"/>
		</method>
		<method name="retroXorCircle" result="void">
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="x" type="int"/>
			<arg name="y" type="int"/>
			<arg name="r" type="int"/>
			<arg name="xor_mask" type="unsigned char"/>
		</method>
		<method name="retroScreenColor" result="void">
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="color" type="int"/>
			<arg name="r" type="unsigned char"/>
			<arg name="g" type="unsigned char"/>
			<arg name="b" type="unsigned char"/>
		</method>
		<method name="retroOrBlit" result="void">
			<arg name="bitmap" type="struct BitMap *"/>
			<arg name="fromX" type="int"/>
			<arg name="fromY" type="int"/>
			<arg name="width" type="int"/>
			<arg name="heigh" type="int"/>
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="toX" type="int"/>
			<arg name="toY" type="int"/>
		</method>
		<method name="retroAndClear" result="void">
			<arg name="screen" type="struct retroScreen *"/>
			<arg name="x0" type="int"/>
			<arg name="y0" type="int"/>
			<arg name="x1" type="int"/>
			<arg name="y1" type="int"/>
			<arg name="and_mask" type="unsigned char"/>
		</method>
		<method name="retroModeBadVideoSync" result="void">
			<arg name="video" type="struct retroVideo *"/>
			<arg name="sync_offset" type="double"/>
			<arg name="incRad" type="double"/>
		</method>
		<method name="AfterEffectScanline" result="void">
			<arg name="video" type="struct retroVideo *"/>
		</method>
		<method name="AfterEffectAdjustRGB" result="void">
			<arg name="video" type="struct retroVideo *"/>
			<arg name="red_shift" type="unsigned int"/>
			<arg name="green_shift" type="unsigned int"/>
			<arg name="blue_shift" type="unsigned int"/>
		</method>
	</interface>
</library>
