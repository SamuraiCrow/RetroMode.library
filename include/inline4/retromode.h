#ifndef INLINE4_RETROMODE_H
#define INLINE4_RETROMODE_H

/*
** This file was auto generated by idltool 53.6.
**
** It provides compatibility to OS3 style library
** calls by substituting functions.
**
** Do not edit manually.
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_RETROMODE_H
#include <libraries/retromode.h>
#endif
#include <interfaces/retromode.h>

/* Inline macros for Interface "main" */
#define retroAllocVideo(window) IRetroMode->retroAllocVideo((window)) 
#define retroFreeVideo(video) IRetroMode->retroFreeVideo((video)) 
#define retroClearVideo(video) IRetroMode->retroClearVideo((video)) 
#define retroDrawVideo(video) IRetroMode->retroDrawVideo((video)) 
#define retroDmaVideo(video) IRetroMode->retroDmaVideo((video)) 
#define retroOpenScreen(width, height) IRetroMode->retroOpenScreen((width), (height)) 
#define retroCloseScreen(screen) IRetroMode->retroCloseScreen((screen)) 
#define retroApplyScreen(screen, video, offsetx, oppsety, videomode) IRetroMode->retroApplyScreen((screen), (video), (offsetx), (oppsety), (videomode)) 
#define retroPixel(screen, x, y, color) IRetroMode->retroPixel((screen), (x), (y), (color)) 
#define retroPoint(screen, x, y) IRetroMode->retroPoint((screen), (x), (y)) 
#define retroFlash(screen, color, data) IRetroMode->retroFlash((screen), (color), (data)) 
#define retroCycleColorsUp(screen, from_color, to_color) IRetroMode->retroCycleColorsUp((screen), (from_color), (to_color)) 
#define retroCycleColorsDown(screen, from_color, to_color) IRetroMode->retroCycleColorsDown((screen), (from_color), (to_color)) 
#define retroBAR(screen, x0, y0, x1, y1, color) IRetroMode->retroBAR((screen), (x0), (y0), (x1), (y1), (color)) 
#define retroOrBAR(screen, x0, y0, x1, y1, or_mask) IRetroMode->retroOrBAR((screen), (x0), (y0), (x1), (y1), (or_mask)) 
#define retroXorBAR(screen, x0, y0, x1, y1, xor_mask) IRetroMode->retroXorBAR((screen), (x0), (y0), (x1), (y1), (xor_mask)) 
#define retroBox(screen, x0, y0, x1, y1, color) IRetroMode->retroBox((screen), (x0), (y0), (x1), (y1), (color)) 
#define retroOrBox(screen, x0, y0, x1, y1, or_mask) IRetroMode->retroOrBox((screen), (x0), (y0), (x1), (y1), (or_mask)) 
#define retroXorBox(screen, x0, y0, x1, y1, xor_mask) IRetroMode->retroXorBox((screen), (x0), (y0), (x1), (y1), (xor_mask)) 
#define retroShift(screen, x0, y0, x1, y1, bits) IRetroMode->retroShift((screen), (x0), (y0), (x1), (y1), (bits)) 
#define retroCircle(screen, x, y, r, color) IRetroMode->retroCircle((screen), (x), (y), (r), (color)) 
#define retroEclipse(screen, x, y, r1, r2, color) IRetroMode->retroEclipse((screen), (x), (y), (r1), (r2), (color)) 
#define retroOrCircle(screen, x, y, r, or_mask) IRetroMode->retroOrCircle((screen), (x), (y), (r), (or_mask)) 
#define retroXorCircle(screen, x, y, r, xor_mask) IRetroMode->retroXorCircle((screen), (x), (y), (r), (xor_mask)) 
#define retroScreenColor(screen, color, r, g, b) IRetroMode->retroScreenColor((screen), (color), (r), (g), (b)) 
#define retroScreenBlit(bitmap, fromX, fromY, width, heigh, screen, toX, toY) IRetroMode->retroScreenBlit((bitmap), (fromX), (fromY), (width), (heigh), (screen), (toX), (toY)) 
#define retroOrScreenBlit(bitmap, fromX, fromY, width, heigh, screen, toX, toY) IRetroMode->retroOrScreenBlit((bitmap), (fromX), (fromY), (width), (heigh), (screen), (toX), (toY)) 
#define retroXorScreenBlit(bitmap, fromX, fromY, width, heigh, screen, toX, toY) IRetroMode->retroXorScreenBlit((bitmap), (fromX), (fromY), (width), (heigh), (screen), (toX), (toY)) 
#define retroBitmapBlit(bitmap, fromX, fromY, width, heigh, screen, toX, toY) IRetroMode->retroBitmapBlit((bitmap), (fromX), (fromY), (width), (heigh), (screen), (toX), (toY)) 
#define retroOrBitmapBlit(bitmap, fromX, fromY, width, heigh, screen, toX, toY) IRetroMode->retroOrBitmapBlit((bitmap), (fromX), (fromY), (width), (heigh), (screen), (toX), (toY)) 
#define retroXorBitmapBlit(bitmap, fromX, fromY, width, heigh, screen, toX, toY) IRetroMode->retroXorBitmapBlit((bitmap), (fromX), (fromY), (width), (heigh), (screen), (toX), (toY)) 
#define retroAndClear(screen, x0, y0, x1, y1, and_mask) IRetroMode->retroAndClear((screen), (x0), (y0), (x1), (y1), (and_mask)) 
#define retroModeBadVideoSync(video, sync_offset, incRad, r) IRetroMode->retroModeBadVideoSync((video), (sync_offset), (incRad), (r)) 
#define AfterEffectScanline(video) IRetroMode->AfterEffectScanline((video)) 
#define AfterEffectAdjustRGB(video, red_shift, green_shift, blue_shift) IRetroMode->AfterEffectAdjustRGB((video), (red_shift), (green_shift), (blue_shift)) 
#define retroTriangle(screen, x1, y1, x2, y2, x3, y3, color) IRetroMode->retroTriangle((screen), (x1), (y1), (x2), (y2), (x3), (y3), (color)) 
#define retroOrTriangle(screen, x1, y1, x2, y2, x3, y3, or_color) IRetroMode->retroOrTriangle((screen), (x1), (y1), (x2), (y2), (x3), (y3), (or_color)) 
#define retroXorTriangle(screen, x1, y1, x2, y2, x3, y3, xor_color) IRetroMode->retroXorTriangle((screen), (x1), (y1), (x2), (y2), (x3), (y3), (xor_color)) 
#define retroLine(screen, x1, y1, x2, y2, color) IRetroMode->retroLine((screen), (x1), (y1), (x2), (y2), (color)) 
#define retroOrLine(screen, x1, y1, x2, y2, color) IRetroMode->retroOrLine((screen), (x1), (y1), (x2), (y2), (color)) 
#define retroXorLine(screen, x1, y1, x2, y2, color) IRetroMode->retroXorLine((screen), (x1), (y1), (x2), (y2), (color)) 
#define retroAllocFrame(screen, x1, y1, x2, y2, hotspotX, hotspotY) IRetroMode->retroAllocFrame((screen), (x1), (y1), (x2), (y2), (hotspotX), (hotspotY)) 
#define retroFreeFrame(frame) IRetroMode->retroFreeFrame((frame)) 
#define retroDrawFrame(frame, screen, X, Y) IRetroMode->retroDrawFrame((frame), (screen), (X), (Y)) 

#endif /* INLINE4_RETROMODE_H */
